{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\projects\\\\snap2sell\\\\Frontend\\\\app\\\\screens\\\\ListingEditScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as Yup from \"yup\";\nimport FormImagePicker from \"../components/forms/FormImagePicker\";\nimport useLocation from \"../hooks/useLocation\";\nimport listingsApi from \"../api/listings\";\nimport { AppForm as Form, AppFormField as FormField, AppFormPicker as Picker, SubmitButton } from \"../components/forms\";\nimport Screen from \"../components/Screen\";\nvar validationSchema = Yup.object().shape({\n  title: Yup.string().required().min(1).label(\"Title\"),\n  price: Yup.number().required().min(1).max(10000).label(\"Price\"),\n  description: Yup.string().label(\"Description\"),\n  category: Yup.object().required().nullable().label(\"Category\"),\n  image: Yup.array().min(1, \"select atleast 1 image\")\n});\nvar categories = [{\n  label: \"Furniture\",\n  value: 1\n}, {\n  label: \"Clothing\",\n  value: 2\n}, {\n  label: \"Camera\",\n  value: 3\n}];\n\nfunction ListingEditScreen() {\n  var location = useLocation();\n\n  var handleSubmit = function handleSubmit(listing) {\n    var result;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(listingsApi.addListing(_objectSpread(_objectSpread({}, listing), {}, {\n              location: location\n            })));\n\n          case 2:\n            result = _context.sent;\n\n            if (!result.ok) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\", alert(\"success\"));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Screen, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, React.createElement(Form, {\n    initialValues: {\n      title: \"\",\n      price: \"\",\n      description: \"\",\n      category: null,\n      images: []\n    },\n    onSubmit: handleSubmit,\n    validationSchema: validationSchema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, React.createElement(FormImagePicker, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), React.createElement(FormField, {\n    maxLength: 255,\n    name: \"title\",\n    placeholder: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), React.createElement(FormField, {\n    keyboardType: \"numeric\",\n    maxLength: 8,\n    name: \"price\",\n    placeholder: \"Price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), React.createElement(Picker, {\n    items: categories,\n    name: \"category\",\n    placeholder: \"Category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), React.createElement(FormField, {\n    maxLength: 255,\n    multiline: true,\n    name: \"description\",\n    numberOfLines: 3,\n    placeholder: \"Description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), React.createElement(SubmitButton, {\n    title: \"Post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    padding: 10\n  }\n});\nexport default ListingEditScreen;","map":{"version":3,"sources":["C:/projects/snap2sell/Frontend/app/screens/ListingEditScreen.js"],"names":["React","Yup","FormImagePicker","useLocation","listingsApi","AppForm","Form","AppFormField","FormField","AppFormPicker","Picker","SubmitButton","Screen","validationSchema","object","shape","title","string","required","min","label","price","number","max","description","category","nullable","image","array","categories","value","ListingEditScreen","location","handleSubmit","listing","addListing","result","ok","alert","styles","container","images","StyleSheet","create","padding"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport * as Yup from \"yup\";\r\nimport FormImagePicker from \"../components/forms/FormImagePicker\";\r\nimport useLocation from \"../hooks/useLocation\";\r\nimport listingsApi from \"../api/listings\";\r\n\r\n\r\nimport {\r\n  AppForm as Form,\r\n  AppFormField as FormField,\r\n  AppFormPicker as Picker,\r\n  SubmitButton,\r\n} from \"../components/forms\";\r\n\r\nimport Screen from \"../components/Screen\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  title: Yup.string().required().min(1).label(\"Title\"),\r\n  price: Yup.number().required().min(1).max(10000).label(\"Price\"),\r\n  description: Yup.string().label(\"Description\"),\r\n  category: Yup.object().required().nullable().label(\"Category\"),\r\n  image: Yup.array().min(1, \"select atleast 1 image\"),\r\n});\r\n\r\nconst categories = [\r\n  { label: \"Furniture\", value: 1 },\r\n  { label: \"Clothing\", value: 2 },\r\n  { label: \"Camera\", value: 3 },\r\n];\r\n\r\nfunction ListingEditScreen() {\r\n  const location = useLocation();\r\n\r\n  const handleSubmit = async (listing) => {\r\n    const result = await listingsApi.addListing({ ...listing, location });\r\n    if (result.ok) {\r\n      return alert(\"success\")\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Screen style={styles.container}>\r\n      <Form\r\n        initialValues={{\r\n          title: \"\",\r\n          price: \"\",\r\n          description: \"\",\r\n          category: null,\r\n          images: []\r\n        }}\r\n        onSubmit={handleSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        <FormImagePicker />\r\n        <FormField maxLength={255} name=\"title\" placeholder=\"Title\" />\r\n        <FormField\r\n          keyboardType=\"numeric\"\r\n          maxLength={8}\r\n          name=\"price\"\r\n          placeholder=\"Price\"\r\n        />\r\n        <Picker items={categories} name=\"category\" placeholder=\"Category\" />\r\n        <FormField\r\n          maxLength={255}\r\n          multiline\r\n          name=\"description\"\r\n          numberOfLines={3}\r\n          placeholder=\"Description\"\r\n        />\r\n        <SubmitButton title=\"Post\" />\r\n      </Form>\r\n    </Screen>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 10,\r\n  },\r\n});\r\nexport default ListingEditScreen;"]},"metadata":{},"sourceType":"module"}