{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\projects\\\\snap2sell\\\\app\\\\screens\\\\RegisterScreen.js\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as Yup from \"yup\";\nimport Screen from \"../components/Screen\";\nimport usersApi from \"../api/users\";\nimport authApi from \"../api/auth\";\nimport useAuth from \"../auth/useAuth\";\nimport { ErrorMessage, Form, FormField, SubmitButton } from \"../components/forms\";\nimport useApi from \"../hooks/useApi\";\nimport ActivityIndicator from \"../components/ActivityIndicator\";\nvar validationSchema = Yup.object().shape({\n  name: Yup.string().required().label(\"Name\"),\n  email: Yup.string().required().email().label(\"Email\"),\n  password: Yup.string().required().min(4).label(\"Password\")\n});\n\nfunction RegisterScreen() {\n  var registerApi = useApi(usersApi.register);\n  var loginApi = useApi(authApi.login);\n  var auth = useAuth();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var handleSubmit = function handleSubmit(userInfo) {\n    var result, _await$loginApi$reque, authToken;\n\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(registerApi.request(userInfo));\n\n          case 2:\n            result = _context.sent;\n\n            if (result.ok) {\n              _context.next = 6;\n              break;\n            }\n\n            if (result.data) setError(result.data.error);else {\n              setError(\"An unexpected error occurred.\");\n              console.log(result);\n            }\n            return _context.abrupt(\"return\");\n\n          case 6:\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(loginApi.request(userInfo.email, userInfo.password));\n\n          case 8:\n            _await$loginApi$reque = _context.sent;\n            authToken = _await$loginApi$reque.data;\n            auth.logIn(authToken);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(ActivityIndicator, {\n    visible: registerApi.loading || loginApi.loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), React.createElement(Screen, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, React.createElement(Form, {\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      password: \"\"\n    },\n    onSubmit: handleSubmit,\n    validationSchema: validationSchema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, React.createElement(ErrorMessage, {\n    error: error,\n    visible: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), React.createElement(FormField, {\n    autoCorrect: false,\n    icon: \"account\",\n    name: \"name\",\n    placeholder: \"Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }), React.createElement(FormField, {\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    icon: \"email\",\n    keyboardType: \"email-address\",\n    name: \"email\",\n    placeholder: \"Email\",\n    textContentType: \"emailAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }), React.createElement(FormField, {\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    icon: \"lock\",\n    name: \"password\",\n    placeholder: \"Password\",\n    secureTextEntry: true,\n    textContentType: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }), React.createElement(SubmitButton, {\n    title: \"Register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    padding: 10\n  }\n});\nexport default RegisterScreen;","map":{"version":3,"sources":["C:/projects/snap2sell/app/screens/RegisterScreen.js"],"names":["React","useState","Yup","Screen","usersApi","authApi","useAuth","ErrorMessage","Form","FormField","SubmitButton","useApi","ActivityIndicator","validationSchema","object","shape","name","string","required","label","email","password","min","RegisterScreen","registerApi","register","loginApi","login","auth","error","setError","handleSubmit","userInfo","request","result","ok","data","console","log","authToken","logIn","loading","styles","container","StyleSheet","create","padding"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,OAAOC,MAAP;AACA,OAAOC,QAAP;AACA,OAAOC,OAAP;AACA,OAAOC,OAAP;AACA,SACEC,YADF,EAEEC,IAFF,EAGEC,SAHF,EAIEC,YAJF;AAMA,OAAOC,MAAP;AACA,OAAOC,iBAAP;AAEA,IAAMC,gBAAgB,GAAGX,GAAG,CAACY,MAAJ,GAAaC,KAAb,CAAmB;AAC1CC,EAAAA,IAAI,EAAEd,GAAG,CAACe,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,MAA9B,CADoC;AAE1CC,EAAAA,KAAK,EAAElB,GAAG,CAACe,MAAJ,GAAaC,QAAb,GAAwBE,KAAxB,GAAgCD,KAAhC,CAAsC,OAAtC,CAFmC;AAG1CE,EAAAA,QAAQ,EAAEnB,GAAG,CAACe,MAAJ,GAAaC,QAAb,GAAwBI,GAAxB,CAA4B,CAA5B,EAA+BH,KAA/B,CAAqC,UAArC;AAHgC,CAAnB,CAAzB;;AAMA,SAASI,cAAT,GAA0B;AACxB,MAAMC,WAAW,GAAGb,MAAM,CAACP,QAAQ,CAACqB,QAAV,CAA1B;AACA,MAAMC,QAAQ,GAAGf,MAAM,CAACN,OAAO,CAACsB,KAAT,CAAvB;AACA,MAAMC,IAAI,GAAGtB,OAAO,EAApB;;AAHwB,kBAIEL,QAAQ,EAJV;AAAA;AAAA,MAIjB4B,KAJiB;AAAA,MAIVC,QAJU;;AAMxB,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAOC,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACER,WAAW,CAACS,OAAZ,CAAoBD,QAApB,CADF;;AAAA;AACbE,YAAAA,MADa;;AAAA,gBAGdA,MAAM,CAACC,EAHO;AAAA;AAAA;AAAA;;AAIjB,gBAAID,MAAM,CAACE,IAAX,EAAiBN,QAAQ,CAACI,MAAM,CAACE,IAAP,CAAYP,KAAb,CAAR,CAAjB,KACK;AACHC,cAAAA,QAAQ,CAAC,+BAAD,CAAR;AACAO,cAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACD;AARgB;;AAAA;AAAA;AAAA,6CAYeR,QAAQ,CAACO,OAAT,CAChCD,QAAQ,CAACZ,KADuB,EAEhCY,QAAQ,CAACX,QAFuB,CAZf;;AAAA;AAAA;AAYLkB,YAAAA,SAZK,yBAYXH,IAZW;AAgBnBR,YAAAA,IAAI,CAACY,KAAL,CAAWD,SAAX;;AAhBmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAmBA,SACE,0CACE,oBAAC,iBAAD;AAAmB,IAAA,OAAO,EAAEf,WAAW,CAACiB,OAAZ,IAAuBf,QAAQ,CAACe,OAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEC,MAAM,CAACC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,aAAa,EAAE;AAAE3B,MAAAA,IAAI,EAAE,EAAR;AAAYI,MAAAA,KAAK,EAAE,EAAnB;AAAuBC,MAAAA,QAAQ,EAAE;AAAjC,KADjB;AAEE,IAAA,QAAQ,EAAEU,YAFZ;AAGE,IAAA,gBAAgB,EAAElB,gBAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEgB,KAArB;AAA4B,IAAA,OAAO,EAAEA,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME,oBAAC,SAAD;AACE,IAAA,WAAW,EAAE,KADf;AAEE,IAAA,IAAI,EAAC,SAFP;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,WAAW,EAAC,MAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAYE,oBAAC,SAAD;AACE,IAAA,cAAc,EAAC,MADjB;AAEE,IAAA,WAAW,EAAE,KAFf;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,YAAY,EAAC,eAJf;AAKE,IAAA,IAAI,EAAC,OALP;AAME,IAAA,WAAW,EAAC,OANd;AAOE,IAAA,eAAe,EAAC,cAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAqBE,oBAAC,SAAD;AACE,IAAA,cAAc,EAAC,MADjB;AAEE,IAAA,WAAW,EAAE,KAFf;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,WAAW,EAAC,UALd;AAME,IAAA,eAAe,MANjB;AAOE,IAAA,eAAe,EAAC,UAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,EA8BE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BF,CADF,CAFF,CADF;AAuCD;;AAED,IAAMa,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,OAAO,EAAE;AADA;AADoB,CAAlB,CAAf;AAMA,eAAevB,cAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport * as Yup from \"yup\";\n\nimport Screen from \"../components/Screen\";\nimport usersApi from \"../api/users\";\nimport authApi from \"../api/auth\";\nimport useAuth from \"../auth/useAuth\";\nimport {\n  ErrorMessage,\n  Form,\n  FormField,\n  SubmitButton,\n} from \"../components/forms\";\nimport useApi from \"../hooks/useApi\";\nimport ActivityIndicator from \"../components/ActivityIndicator\";\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string().required().label(\"Name\"),\n  email: Yup.string().required().email().label(\"Email\"),\n  password: Yup.string().required().min(4).label(\"Password\"),\n});\n\nfunction RegisterScreen() {\n  const registerApi = useApi(usersApi.register);\n  const loginApi = useApi(authApi.login);\n  const auth = useAuth();\n  const [error, setError] = useState();\n\n  const handleSubmit = async (userInfo) => {\n    const result = await registerApi.request(userInfo);\n\n    if (!result.ok) {\n      if (result.data) setError(result.data.error);\n      else {\n        setError(\"An unexpected error occurred.\");\n        console.log(result);\n      }\n      return;\n    }\n\n    const { data: authToken } = await loginApi.request(\n      userInfo.email,\n      userInfo.password\n    );\n    auth.logIn(authToken);\n  };\n\n  return (\n    <>\n      <ActivityIndicator visible={registerApi.loading || loginApi.loading} />\n      <Screen style={styles.container}>\n        <Form\n          initialValues={{ name: \"\", email: \"\", password: \"\" }}\n          onSubmit={handleSubmit}\n          validationSchema={validationSchema}\n        >\n          <ErrorMessage error={error} visible={error} />\n          <FormField\n            autoCorrect={false}\n            icon=\"account\"\n            name=\"name\"\n            placeholder=\"Name\"\n          />\n          <FormField\n            autoCapitalize=\"none\"\n            autoCorrect={false}\n            icon=\"email\"\n            keyboardType=\"email-address\"\n            name=\"email\"\n            placeholder=\"Email\"\n            textContentType=\"emailAddress\"\n          />\n          <FormField\n            autoCapitalize=\"none\"\n            autoCorrect={false}\n            icon=\"lock\"\n            name=\"password\"\n            placeholder=\"Password\"\n            secureTextEntry\n            textContentType=\"password\"\n          />\n          <SubmitButton title=\"Register\" />\n        </Form>\n      </Screen>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 10,\n  },\n});\n\nexport default RegisterScreen;\n"]},"metadata":{},"sourceType":"module"}